.inputContainer {
  margin-bottom: 30px;
  position: relative;
}

.mainInput {
  width: 100%;
  padding: 16px 60px 16px 16px;
  font-size: 24px;
  font-weight: 300;
  line-height: 1.4em;
  border: none;
  background: rgba(0, 0, 0, 0.003);
  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);
  outline: none;
  color: #2d3748;
  font-style: italic;
}

.mainInput:focus {
  font-style: normal;
  background: #fff;
  box-shadow: 0 0 2px 2px rgba(175, 47, 47, 0.2);
}

.mainInput::placeholder {
  font-style: italic;
  font-weight: 300;
  color: #a9a9a9;
}

/* Hide character counter for cleaner look */
.inputCounter {
  display: none;
}

.successMessage {
  color: #4CAF50;
  font-size: 14px;
  margin-top: 8px;
  text-align: center;
  animation: fadeInOut 3s ease;
}

.errorMessage {
  color: #f44336;
  font-size: 14px;
  margin-top: 8px;
  text-align: center;
  animation: shake 0.5s ease;
}

@keyframes fadeInOut {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.todoList {
  list-style: none;
  margin: 0;
  padding: 0;
}

.emptyState {
  text-align: center;
  color: #777;
  font-style: italic;
  padding: 40px 20px;
}

/* Remove debug info in production-style */
.debugInfo {
  display: none;
}

/* Connection Status Styles */
.connectionStatus {
  padding: 8px 12px;
  margin-bottom: 15px;
  border-radius: 4px;
  font-size: 14px;
  text-align: center;
  font-weight: 500;
}

.connectionOnline {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.connectionOffline {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

/* Loading Styles */
.loadingMessage {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  padding: 20px;
  color: #666;
  font-style: italic;
}

.loadingSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid #f3f3f3;
  border-top: 2px solid #af2f2f;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Input Error State */
.inputError {
  border: 2px solid #f44336 !important;
  background-color: #ffebee !important;
}